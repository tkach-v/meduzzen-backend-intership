name: Checks

on:
  pull_request:
    types: [opened, closed]

jobs:
  test-lint:
    name: Run lint and tests
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request'
      && github.event.action == 'opened'
      && github.event.pull_request.base.ref == 'develop'

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: ${{ secrets.DB_PORT }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Export all secrets to .env file
        run: |
          echo "DB_HOST=${DB_HOST}" > .env
          echo "DB_NAME=${DB_NAME}" >> .env
          echo "DB_USER=${DB_USER}" >> .env
          echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
          echo "DB_PORT=${DB_PORT}" >> .env
          echo "REDIS_HOST=${REDIS_HOST}" >> .env
          echo "REDIS_PORT=${REDIS_PORT}" >> .env
          echo "SECRET_KEY=${SECRET_KEY}" >> .env
          echo "DEBUG=${DEBUG}" >> .env
          echo "ALLOWED_HOSTS=${ALLOWED_HOSTS}" >> .env

      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: app-image
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Lint
        run: docker-compose run --rm app sh -c "ruff check ."
      - name: Test
        run: docker-compose run --rm app sh -c "python manage.py test"

  deployment:
    needs: test-lint
    runs-on: self-hosted
    if: >
      github.event_name == 'pull_request'
      && github.event.action == 'closed'
      && github.event.pull_request.merged
      && github.event.pull_request.base.ref == 'develop'
    steps:
      - name: Stop and remove old containers
        run: sudo docker compose down
      - name: Pull develop branch from remote
        run: git pull origin develop
      - name: Set branch to develop
        run: git checkout develop
      - name: Make start.sh executable
        run: sudo chmod +x start.sh
      - name: Build and start new containers
        run: sudo docker compose up --build -d